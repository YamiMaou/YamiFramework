<?php
/**
 * Created by PhpStorm.
 * User: DIGITAL
 * Date: 28/03/2019
 * Time: 10:44
 */

namespace YamiTec\Handlers;

use YamiTec\Interfaces\RendererInterface;
use YamiTec\Interfaces\RouterInterface;

abstract class YamitecHandler extends RouterInterface {

    private $_config = [];
    public function __construct($config = [])
    {
        $this->_config = $config;
        parent::__construct($this->_config); // TODO: Change the autogenerated stub
    }

    public function config($config = [])
    {
        $this->_config = $config;
    }
    public function isActive()
    {
        return parent::isActive(); // TODO: Change the autogenerated stub
    }
    public function controller()
    {
        parent::controller(); // TODO: Change the autogenerated stub
    }
}

abstract class YamitecRender extends RendererInterface {

    public function __construct($string = false , $template = "../resources/templates/")
    {
        parent::__construct($string,$template);
    }

    public function setTemplate($tplModule = 'Module/template.sample')
    {
        parent::setTemplate($tplModule); // TODO: Change the autogenerated stub
    }

    public function setData($params = [])
    {
        return parent::setData($params); // TODO: Change the autogenerated stub
    }

    public function replace($is, $to)
    {
        return parent::replace($is, $to); // TODO: Change the autogenerated stub
    }

    public function globalVar($varName, $value = [])
    {
        return parent::globalVar($varName, $value); // TODO: Change the autogenerated stub
    }

    public function render()
    {
        return parent::render(); // TODO: Change the autogenerated stub
    }
}